<Page x:Class="WritePad_CSharpSample.MainPage" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:ignore="http://www.ignore.com"
      mc:Ignorable="d ignore" 
      Loaded="MainPage_OnLoaded"      
      d:DesignHeight="768" d:DesignWidth="1366">

    <Page.Resources>
        <ResourceDictionary>
    <Style x:Key="TextBoxNoReadOnlyBackgroundChange" TargetType="TextBox">
        <Setter Property="MinWidth" Value="{StaticResource TextControlThemeMinWidth}"/>
        <Setter Property="MinHeight" Value="{StaticResource TextControlThemeMinHeight}"/>
        <Setter Property="Foreground" Value="{StaticResource TextBoxForegroundThemeBrush}"/>
        <Setter Property="Background" Value="{StaticResource TextBoxBackgroundThemeBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource TextBoxBorderThemeBrush}"/>
        <Setter Property="BorderThickness" Value="{StaticResource TextControlBorderThemeThickness}"/>
        <Setter Property="FontFamily" Value="{StaticResource ContentControlThemeFontFamily}"/>
        <Setter Property="FontSize" Value="{StaticResource ControlContentThemeFontSize}"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Hidden"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Hidden"/>
        <Setter Property="ScrollViewer.IsDeferredScrollingEnabled" Value="False"/>
        <Setter Property="Padding" Value="{StaticResource TextControlThemePadding}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TextBox">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="BackgroundElement"/>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="BorderElement"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Normal">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="BackgroundElement"/>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="BorderElement"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="PointerOver">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="BackgroundElement"/>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="BorderElement"/>
                                    </Storyboard>
                                </VisualState>

                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="BackgroundElement"/>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="BorderElement"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ButtonStates">
                                <VisualState x:Name="ButtonVisible">
                                    <Storyboard>

                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="ButtonCollapsed"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="BackgroundElement" Background="{TemplateBinding Background}" Grid.ColumnSpan="2" Margin="{TemplateBinding BorderThickness}"/>
                        <Border x:Name="BorderElement" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Grid.ColumnSpan="2"/>
                        <ScrollViewer x:Name="ContentElement" HorizontalScrollMode="{TemplateBinding ScrollViewer.HorizontalScrollMode}" HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}" IsTabStop="False" IsHorizontalRailEnabled="{TemplateBinding ScrollViewer.IsHorizontalRailEnabled}" IsVerticalRailEnabled="{TemplateBinding ScrollViewer.IsVerticalRailEnabled}" IsDeferredScrollingEnabled="{TemplateBinding ScrollViewer.IsDeferredScrollingEnabled}" Margin="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}" VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}" VerticalScrollMode="{TemplateBinding ScrollViewer.VerticalScrollMode}" ZoomMode="Disabled"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    </ResourceDictionary>
    </Page.Resources>
    <Grid Background="LightGray">
        <Grid Name="ContentRoot" Margin="0,0,0,0" x:FieldModifier="public">
            <Grid.RowDefinitions>
                <RowDefinition Height="*"></RowDefinition>
                <RowDefinition Height="Auto"></RowDefinition>
            </Grid.RowDefinitions>
            
            <Popup x:Name="AddAutoCorrectionWordLightDismissAnimatedPopup" IsLightDismissEnabled="True">
                <Popup.ChildTransitions>
                    <TransitionCollection>
                        <PopupThemeTransition />
                    </TransitionCollection>
                </Popup.ChildTransitions>
                <Border BorderBrush="Black" BorderThickness="2" Background="White" Padding="20 20">
                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center">
                        <StackPanel>
                            <TextBlock FontSize="24" HorizontalAlignment="Center" x:Name="EditWordCorrectionTitle" Text="Edit word pairs"></TextBlock>
                            <TextBox Name="AutoCorrectionFirstWord" />
                            <TextBox Margin="0 10 0 0" Name="AutoCorrectionSecondWord" />
                            <ToggleSwitch Name="AutoCorrectionAlwaysReplace" Header="Always Replace" />
                            <ToggleSwitch Name="AutoCorrectionIgnoreCase" Header="Ignore Case" />
                            <ToggleSwitch Name="AutoCorrectionDisabled" Header="Disabled" />
                            <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                                <Button Content="Save" Name="AutocorrectSaveButton" Click="SaveAutoCorrectionWordClick" />
                                <Button Visibility="Collapsed" Name="AutocorrectEditButton" Content="Save" Click="EditAutoCorrectionWordClick" />
                                <Button Visibility="Collapsed" Name="AutocorrectDeleteButton" Content="Delete" Click="DeleteAutoCorrectionWordClick" />
                            </StackPanel>
                        </StackPanel>
                    </StackPanel>
                </Border>
            </Popup>
            <Grid>
                <Grid Grid.Row="0">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"></RowDefinition>
                        <RowDefinition Height="*"></RowDefinition>
                    </Grid.RowDefinitions>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"></ColumnDefinition>
                            <ColumnDefinition Width="*"></ColumnDefinition>
                            <ColumnDefinition Width="Auto"></ColumnDefinition>

                       </Grid.ColumnDefinitions>
                        <TextBlock Grid.Column="0" Margin="20 0 0 0" Foreground="Black" FontSize="30" VerticalAlignment="Center">Recognized text:</TextBlock>
                        <ScrollViewer VerticalScrollBarVisibility="Visible" Height="200" Grid.Column="1" Margin="20 10 0 10">
                            <TextBox Style="{StaticResource TextBoxNoReadOnlyBackgroundChange}" FontFamily="Fonts/cour.ttf#Courier New" Name="RecognizedTextBox" AcceptsReturn="True" IsReadOnly="True" FontSize="20" Foreground="Black" Background="LightGray" Height="Auto" TextWrapping="NoWrap" ></TextBox>
                        </ScrollViewer>
                        <StackPanel Grid.Column="2" Orientation="Vertical" Margin="20 10 8 10">
                            <Button Foreground="Black" Margin="0 0 20 0" FontSize="25" Width="200" Click="RecognizeAllClick">Recognize text</Button>
                            <Button Foreground="Black" Margin="0 0 20 0" FontSize="25" Width="200" Click="ClearAllClick">Clear</Button>

                        </StackPanel>
                    </Grid>
                    
                    <Grid Grid.Row="1">
                        <Canvas x:Name="InkCanvas" Margin="20 20 30 30" Background="#F0F088" PointerPressed="OnCanvasPointerPressed"  HorizontalAlignment="Stretch" VerticalAlignment="Stretch" ManipulationMode="None" PointerReleased="OnCanvasPointerReleased" PointerCaptureLost="OnCanvasPointerCaptureLost" PointerExited="InkCanvas_OnPointerExited" PointerMoved="OnCanvasPointerMoved"/>
                    </Grid>
                </Grid>
            </Grid>
        </Grid>
    </Grid>
</Page>